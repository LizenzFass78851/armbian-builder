name: Build Armbian Image

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v3

    #  - name: Install dependencies
    #    run: |
    #      sudo apt-get update
    #      sudo apt-get install -y build-essential crossbuild-essential-arm64 git \
    #      qemu-user-static debootstrap asciidoc binutils bison flex gcc-aarch64-linux-gnu \
    #      gcc-arm-linux-gnueabihf cpio rsync bc binfmt-support \
    #      lzop lz4 parallel u-boot-tools uuid-dev zlib1g-dev unzip libusb-1.0-0-dev \
    #      parted pkg-config libncurses5-dev whiptail debian-keyring debian-archive-keyring \
    #      f2fs-tools libfile-fcntllock-perl rsync libssl-dev nfs-kernel-server btrfs-progs \
    #      gcc-arm-linux-gnueabihf ncurses-term p7zip-full kmod dosfstools libc6-dev-armhf-cross \
    #      fakeroot pv swig aptly acl systemd-container udev g++-aarch64-linux-gnu \
    #      python3-dev git-core pigz linux-base swig aptly acl systemd-container \
    #      udev g++-arm-linux-gnueabihf

      - name: Clone Armbian Build
        run: |
          git clone --depth 1 https://github.com/armbian/build.git armbian-build
          cd armbian-build

      - name: Build Image
        run: |
          cd armbian-build
          ./compile.sh PREFER_DOCKER=yes BUILD_ONLY=armbian-bsp COMPRESS_OUTPUTIMAGE=xz,sha,txt SHOW_DEBIAN=yes BUILD_MINIMAL=no BUILD_DESKTOP=no BRANCH=current RELEASE=noble EXPERT=yes USE_MAINLINE_GOOGLE_MIRROR=no USE_GITHUB_UBOOT_MIRROR=yes USE_TORRENT=yes KERNEL_CONFIGURE=no BOARD=bananapim2ultra
          ./compile.sh PREFER_DOCKER=yes BUILD_ONLY=armbian-bsp COMPRESS_OUTPUTIMAGE=xz,sha,txt SHOW_DEBIAN=yes BUILD_MINIMAL=no BUILD_DESKTOP=no BRANCH=current RELEASE=bookworm EXPERT=yes USE_MAINLINE_GOOGLE_MIRROR=no USE_GITHUB_UBOOT_MIRROR=yes USE_TORRENT=yes KERNEL_CONFIGURE=no BOARD=bananapim2ultra
          ./compile.sh PREFER_DOCKER=yes BUILD_ONLY=armbian-bsp COMPRESS_OUTPUTIMAGE=xz,sha,txt SHOW_DEBIAN=yes BUILD_MINIMAL=yes BUILD_DESKTOP=no BRANCH=current RELEASE=noble EXPERT=yes USE_MAINLINE_GOOGLE_MIRROR=no USE_GITHUB_UBOOT_MIRROR=yes USE_TORRENT=yes KERNEL_CONFIGURE=no BOARD=bananapim2ultra
          ./compile.sh PREFER_DOCKER=yes BUILD_ONLY=armbian-bsp COMPRESS_OUTPUTIMAGE=xz,sha,txt SHOW_DEBIAN=yes BUILD_MINIMAL=yes BUILD_DESKTOP=no BRANCH=current RELEASE=bookworm EXPERT=yes USE_MAINLINE_GOOGLE_MIRROR=no USE_GITHUB_UBOOT_MIRROR=yes USE_TORRENT=yes KERNEL_CONFIGURE=no BOARD=bananapim2ultra
          ./compile.sh PREFER_DOCKER=yes BUILD_ONLY=armbian-bsp COMPRESS_OUTPUTIMAGE=xz,sha,txt SHOW_DEBIAN=yes BUILD_MINIMAL=no BUILD_DESKTOP=yes BRANCH=current RELEASE=noble EXPERT=yes USE_MAINLINE_GOOGLE_MIRROR=no USE_GITHUB_UBOOT_MIRROR=yes USE_TORRENT=yes KERNEL_CONFIGURE=no BOARD=bananapim2ultra
          ./compile.sh PREFER_DOCKER=yes BUILD_ONLY=armbian-bsp COMPRESS_OUTPUTIMAGE=xz,sha,txt SHOW_DEBIAN=yes BUILD_MINIMAL=no BUILD_DESKTOP=yes BRANCH=current RELEASE=bookworm EXPERT=yes USE_MAINLINE_GOOGLE_MIRROR=no USE_GITHUB_UBOOT_MIRROR=yes USE_TORRENT=yes KERNEL_CONFIGURE=no BOARD=bananapim2ultra

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: armbian-build/output/images/*
          name: Armbian ${{ github.ref_name }} - Banana Pi M2 Ultra
          body: |
            Armbian image for Banana Pi M2 Ultra
            Built from ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
