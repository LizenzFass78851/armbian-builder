name: Build Armbian Image

on:
  push:
    paths:
      - '.github/workflows/build.yml'
#  schedule:
#    - cron: '02 15 */3 * 2'
  workflow_dispatch:

permissions:
  contents: write
  packages: read

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - type: standard
            minimal: "no"
            desktop: "no"
            release: "jammy noble bookworm trixie"
          - type: minimal
            minimal: "yes"
            desktop: "no"
            release: "jammy noble bookworm trixie"
          - type: desktop
            minimal: "no"
            desktop: "yes"
            release: "noble bookworm"
    env:
      BOARD: "bananapim2ultra"
      BUILD_VER: "v25.8.0-trunk.130"
    
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Clone Armbian Build
        run: |
          git clone --depth 1 https://github.com/armbian/build.git --branch=${{ env.BUILD_VER }} armbian-build
          cd armbian-build

      - name: Build ${{ matrix.type }} Image
        run: |
          cd armbian-build
          for release in ${{ matrix.release }}; do
            bash ./compile.sh \
              PREFER_DOCKER=yes \
              BUILD_ONLY=armbian-bsp \
              COMPRESS_OUTPUTIMAGE=xz,sha,txt \
              SHOW_DEBIAN=yes \
              BUILD_MINIMAL=${{ matrix.minimal }} \
              BUILD_DESKTOP=${{ matrix.desktop }} \
              BRANCH=current \
              RELEASE=${release} \
              EXPERT=yes \
              USE_MAINLINE_GOOGLE_MIRROR=no \
              USE_GITHUB_UBOOT_MIRROR=yes \
              USE_TORRENT=yes \
              KERNEL_CONFIGURE=no \
              $([[ "${{ matrix.desktop }}" = "yes" ]] && echo "DESKTOP_ENVIRONMENT=xfce DESKTOP_ENVIRONMENT_CONFIG_NAME=config_base DESKTOP_APPGROUPS_SELECTED=") \
              BOARD=${{ env.BOARD }}
          done

      - name: Create Release
        uses: "crowbarmaster/GH-Automatic-Releases@v1.6.0"
        with:
          repo_token: "${{ github.token }}"
          automatic_release_tag: "${{ matrix.type }}"
          prerelease: false
          title: "Armbian ${{ matrix.type }} image for ${{ env.BOARD }}"
          body: |
            Armbian Version - ${{ env.BUILD_VER }}
          files: |
            ./armbian-build/output/images/*
